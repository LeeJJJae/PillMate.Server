// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PillMate.Server.Data;

#nullable disable

namespace PillMate.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250430130148_AddTakenMedicineSupport")]
    partial class AddTakenMedicineSupport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PillMate.Server.Models.BukyoungStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Bukyoung_At")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Bukyoung_Chk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Hwanja_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Hwanja_No")
                        .HasColumnType("longtext");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("BukyoungStatuses");
                });

            modelBuilder.Entity("PillMate.Server.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bohoja_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Bohoja_PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int?>("Hwanja_Age")
                        .HasColumnType("int");

                    b.Property<string>("Hwanja_Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("Hwanja_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Hwanja_No")
                        .HasColumnType("longtext");

                    b.Property<string>("Hwanja_PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Hwanja_Room")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PillMate.Server.Models.Pill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Yank_Cnt")
                        .HasColumnType("int");

                    b.Property<string>("Yank_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Yank_Num")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pills");
                });

            modelBuilder.Entity("PillMate.Server.Models.TakenMedicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dosage")
                        .HasColumnType("longtext");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("PillId");

                    b.ToTable("TakenMedicines");
                });

            modelBuilder.Entity("PillMate.Server.Models.BukyoungStatus", b =>
                {
                    b.HasOne("PillMate.Server.Models.Patient", "Patient")
                        .WithMany("BukyoungStatuses")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PillMate.Server.Models.TakenMedicine", b =>
                {
                    b.HasOne("PillMate.Server.Models.Patient", "Patient")
                        .WithMany("TakenMedicines")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillMate.Server.Models.Pill", "Pill")
                        .WithMany("TakenMedicines")
                        .HasForeignKey("PillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Pill");
                });

            modelBuilder.Entity("PillMate.Server.Models.Patient", b =>
                {
                    b.Navigation("BukyoungStatuses");

                    b.Navigation("TakenMedicines");
                });

            modelBuilder.Entity("PillMate.Server.Models.Pill", b =>
                {
                    b.Navigation("TakenMedicines");
                });
#pragma warning restore 612, 618
        }
    }
}
